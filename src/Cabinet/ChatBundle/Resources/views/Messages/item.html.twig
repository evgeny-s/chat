{% extends "::Cabinet/layout.html.twig" %}
{% block content %}
<div class="row">
    <div class="col-sm-9 col-md-9 col-lg-10">

        <h4>Messages list of this sender</h4>

        <div>
            <a href="{{ path("_cabinet_chat_item", {"id": id, "get_all": "1"}) }}">Show previous messages</a>
        </div>

        <div class="panel-group panel-group-msg message_collection" id="accordion">
            {% include "CabinetChatBundle:Messages:messages_block.html.twig" with {messages: messages} %}
        </div>

        <div class="media msg-reply">
            <a class="pull-left" href="#">
                <img class="img-circle img-online" src="{{ user_pic_path(app.user) }}" alt="">
            </a>
            <form action="" method="post" id="message_form">
                <div class="media-body">
                    {{ form_row(form.text) }}
                    <button class="btn btn-primary btn-sm mt10" id="send_message_button"><i class="fa fa-send mr5"></i> Send</button>
                </div>
            </form>
            <div class="disabling_block hidden">

            </div>
        </div>
    </div>
    {% endblock %}

    {% block javascripts %}
        <script>
            var notification_is_read = true;

            $(function() {
                var globalChatEditor = CKEDITOR.instances.cabinet_chatbundle_message_text;
                /* Ctrl + Enter now will work as Shift + Enter */
                globalChatEditor.on("instanceReady", function() {
                    this.setKeystroke( [
                        [ CKEDITOR.CTRL + 13, 'shiftEnter' ]
                    ] );
                });

                $("#send_message_button").click(function(e) {
                    var disabling_block = $(".disabling_block");
                    disabling_block.removeClass("hidden");

                    e.preventDefault();
                    globalChatEditor.updateElement();
                    $.ajax({
                        data: $('#message_form').serialize(),
                        url: "{{ path('_cabinet_chat_item', {'id' : id}) }}",
                        type: 'post'
                    })
                            .success(function() {
                                disabling_block.addClass("hidden");
                                globalChatEditor.editable().setHtml('');
                                setTimeout(make_message_read, 2000);
                            });
                });

                setTimeout(update_messages, 1000);

                scroll_to_bottom();

                setTimeout(make_message_read, 2000);


                globalChatEditor.on("contentDom", function() {
                    globalChatEditor.document.on("keyup", function(event) {
                        if( event.data.getKeystroke() == 13 ) {
                            $("#send_message_button").click();
                        }
                    });
                });
            });

            $(window).focus(function() {
                setTimeout(make_message_read, 1500);
            });

            var make_message_read = function() {
                $.ajax({
                    data: { make_read: 1 },
                    url: "{{ path('_cabinet_chat_make_read', {'id' : id}) }}",
                    type: 'post'
                })
                        .success(function(data) {
                            if (Boolean(data['status'])) {
                                $(".not_read").removeClass("not_read");

                                $(".pull-right.badge").text(data['count']);

                                notification_is_read = true;
                            }
                        });
            };

            var update_messages = function() {
                var last_id = $(".message_collection .message_block").last().attr('m_id');

                if (! last_id) {
                    last_id = 0;
                }

                var not_read_messages = [];
                $(".seen_block i:not(.glyphicon)").each(function () {
                    not_read_messages.push($(this).parents(".message_block").attr('m_id'));
                });

                $.ajax({
                    data: {
                        last_id: last_id,
                        not_read_messages: not_read_messages
                    },
                    url: "{{ path('_cabinet_chat_get_last', {'id' : id}) }}",
                    type: "post"
                })
                        .success(function(data) {
                            /* updating messages list */
                            if (Boolean(data['status'])) {
                                $(data['html']).appendTo($(".message_collection"));
                                scroll_to_bottom();

                                /* updating not read status */
                                if (data["read_ids"].length) {
                                    for (var id_key in data["read_ids"]) {
                                        $(".message_block[m_id=" + data["read_ids"][id_key] + "] .seen_block i").addClass("glyphicon glyphicon-eye-open");
                                    }
                                }

                                $(".no_messages").remove();
                            }

                            /* make once notification */
                            if($(".not_read").length && notification_is_read) {
                                flash_taskbar($(".not_read").first().find('.panel-body').text());
                                notification_is_read = false;
                            }

                            setTimeout(update_messages, 1000);
                        });
            };

            var scroll_to_bottom = function() {
                $('html, body').animate({scrollTop: $("#message_form").offset().top}, 1000);
            };

            var flash_taskbar = function(text)
            {
                (new PNotify({
                    title: '{{ app.user.username }}, you have new message!',
                    text: text,
                    desktop: {
                        desktop: true
                    }
                })).get().click(function(e) {
                            if ($('.ui-pnotify-closer, .ui-pnotify-sticker, .ui-pnotify-closer *, .ui-pnotify-sticker *').is(e.target)) return;
                        });
            };
            PNotify.desktop.permission();
        </script>
    {% endblock %}

    {% block stylesheets %}
        <style scoped="scoped">
            .disabling_block {
                background-color: white;
                display: inline-block;
                height: 100%;
                left: 0;
                opacity: 0.7;
                position: absolute;
                top: 0;
                width: 100%;
            }

            .media.msg-reply {
                position: relative;
            }

            .margin50 {
                margin-left: 50px;
            }

            .not_read {
                border: 1px solid red;
            }

            .seen_block {
                bottom: 15px;
                position: absolute;
                right: 15px;
            }

            .panel-collapse.collapse.in {
                position: relative;
            }
        </style>
    {% endblock %}