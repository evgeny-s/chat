{% extends "::Cabinet/layout.html.twig" %}
{% block content %}
<div class="row">
    <div class="col-sm-9 col-md-9 col-lg-10">

        <h4>Messages list of this sender</h4>

        <div>
            <a href="{{ path("_cabinet_chat_item", {"id": id, "get_all": "1"}) }}">Show previous messages</a>
        </div>

        <div class="panel-group panel-group-msg message_collection" id="accordion">
            {% include "CabinetChatBundle:Messages:messages_block.html.twig" with {messages: messages} %}
        </div>

        <div class="media msg-reply">
            <a class="pull-left" href="#">
                <img class="img-circle img-online" src="{{ user_pic_path(app.user) }}" alt="">
            </a>
            <form action="" method="post" id="message_form">
                <div class="media-body">
                    <div class="typing hidden">{{ sender.username }} печатает...</div>
                    {{ form_row(form.text) }}
                    <button class="btn btn-primary btn-sm mt10" id="send_message_button"><i class="fa fa-send mr5"></i> Send</button>
                </div>
            </form>
            <div class="disabling_block hidden">
                <img src="{{ asset('assets/cabinet/images/loaders/loader7.gif') }}" />
            </div>
        </div>
    </div>

    <span id="top-link-block" class="hidden">
        <a href="#top" class="well well-sm" onclick="$('html,body').animate({scrollTop:0},'slow');return false;">
            <i class="glyphicon glyphicon-chevron-up"></i> Back to Top
        </a>
    </span>
{% endblock %}

{% block javascripts %}
    <script>
        var Dispatcher = {
            send_message : 0,
            send_message_data : [],
            make_message_read : 0,
            last_id : 0,
            not_read_messages : [],
            notification_is_read : 1,
            window_focus : 1,
            disabling_block : $(".disabling_block"),
            global_chat_editor : {},
            typing_timer : null,
            typing : 0
        };
        PNotify.desktop.permission();

        Dispatcher.disable_timer = function() {
            if (Dispatcher.typing_timer !== 'undefined') {
                clearTimeout(Dispatcher.typing_timer);
                Dispatcher.typing = 0;
            }
        };

        Dispatcher.dispatch = function () {
            Dispatcher.last_id = $(".message_collection .message_block").last().attr('m_id');

            if (! Dispatcher.last_id) {
                Dispatcher.last_id = 0;
            }

            Dispatcher.not_read_messages = [];
            $(".seen_block i:not(.glyphicon)").each(function () {
                Dispatcher.not_read_messages.push($(this).parents(".message_block").attr('m_id'));
            });

            if (Dispatcher.send_message) {
                Dispatcher.send_message_data = $('#cabinet_chatbundle_message_text').val();
            }

            if (Dispatcher.window_focus) {
                Dispatcher.make_message_read = 1;
            }
            $.ajax({
                data: {
                    send_message : Dispatcher.send_message,
                    make_message_read : Dispatcher.make_message_read,
                    last_id: Dispatcher.last_id,
                    not_read_messages: Dispatcher.not_read_messages,
                    send_message_data : Dispatcher.send_message_data,
                    typing : Dispatcher.typing
                },
                url: "{{ path('_cabinet_chat_item', {'id' : id}) }}",
                type: "post"
            })
                    .success(function(data) {
                        /* updating messages list */
                        if (Boolean(data['messages_status'])) {
                            $(data['messages_html']).appendTo($(".message_collection"));
                            Dispatcher.scroll_to_bottom();
                            $(".no_messages").remove();
                            Dispatcher.send_message_data = undefined;
                        }

                        /* updating not read status */
                        if (data["not_read_ids"].length) {
                            for (var id_key in data["not_read_ids"]) {
                                $(".message_block[m_id=" + data["not_read_ids"][id_key] + "] .seen_block i").addClass("glyphicon glyphicon-eye-open");
                            }
                        }

                        /* make once notification */
                        if( $(".not_read").length && Dispatcher.notification_is_read && ! Dispatcher.window_focus) {
                            Dispatcher.flash_taskbar($(".not_read").first().find('.panel-body').text());
                            Dispatcher.notification_is_read = 0;
                        }

                        if (Boolean(data["make_message_read"])) {
                            $(".not_read").removeClass("not_read");
                            $(".pull-right.badge").text(data['make_message_read_count']);
                            Dispatcher.notification_is_read = 1;
                            Dispatcher.make_message_read = 0;
                        }

                        if (Boolean(data["send_message"])) {
                            Dispatcher.disabling_block.addClass("hidden");
                            Dispatcher.global_chat_editor.editable().setHtml('');
                            Dispatcher.make_message_read = 1;
                            Dispatcher.send_message = 0;
                        }

                        if (Boolean(data["to_me_typing"])) {
                            $(".media-body .typing").removeClass("hidden");
                        } else {
                            $(".media-body .typing").addClass("hidden");
                        }

                        setTimeout(Dispatcher.dispatch, 1000);
                    })
                    .error(function() {
                        location.href="{{ path("_cabinet_chat_item", {"id": id}) }}";
                    });
        };

        Dispatcher.flash_taskbar = function(text)
        {
            (new PNotify({
                title: '{{ app.user.username }}, you have new message!',
                text: text,
                desktop: {
                    desktop: true
                }
            })).get().click(function(e) {
                        if ($('.ui-pnotify-closer, .ui-pnotify-sticker, .ui-pnotify-closer *, .ui-pnotify-sticker *').is(e.target)) return;
                    });
        };

        Dispatcher.scroll_to_bottom = function() {
            $('html, body').animate({scrollTop: $("#message_form").offset().top}, 1000);
        };

        $("#send_message_button").on("click", function(e) {
            e.preventDefault();
            Dispatcher.disabling_block.removeClass("hidden");
            Dispatcher.global_chat_editor.updateElement();
            Dispatcher.send_message = 1;
        });

        if ( ($(window).height() + 100) < $(document).height() ) {
            $('#top-link-block').removeClass('hidden').affix({
                // how far to scroll down before link "slides" into view
                offset: {top:100}
            });
        }


        $(function() {
            Dispatcher.global_chat_editor = CKEDITOR.instances.cabinet_chatbundle_message_text;

            /* Ctrl + Enter now will work as Shift + Enter */
            Dispatcher.global_chat_editor.on("instanceReady", function() {
                this.setKeystroke( [
                    [ CKEDITOR.CTRL + 13, 'shiftEnter' ]
                ] );
            });

            $(window).focus(function() {
                Dispatcher.window_focus = 1;
                Dispatcher.make_message_read = 1;
            }).blur(function() {
                Dispatcher.window_focus = false;
            });

            Dispatcher.global_chat_editor.on("focus", function() {
                Dispatcher.window_focus = 1;
                Dispatcher.make_message_read = 1;
            });
            Dispatcher.global_chat_editor.on("blur", function() {
                Dispatcher.window_focus = false;
            });

            Dispatcher.dispatch();
            Dispatcher.scroll_to_bottom();
            Dispatcher.make_message_read = 1;

            Dispatcher.global_chat_editor.on("contentDom", function() {
                Dispatcher.global_chat_editor.document.on("keyup", function(event) {
                    if( event.data.getKeystroke() == 13 ) {
                        $("#send_message_button").click();
                    }
                });
            });

            Dispatcher.global_chat_editor.on('key', function () {
                Dispatcher.typing = 1;
                if (Dispatcher.typing_timer !== 'undefined') {
                    clearTimeout(Dispatcher.typing_timer);
                }
                Dispatcher.typing_timer = setTimeout(Dispatcher.disable_timer, 1500);
            } );
        });
    </script>
{% endblock %}

{% block stylesheets %}
    <style scoped="scoped">
        .disabling_block {
            background-color: white;
            display: inline-block;
            height: 100%;
            left: 0;
            opacity: 0.7;
            position: absolute;
            top: 0;
            width: 100%;
        }

        .media.msg-reply {
            position: relative;
        }

        .margin50 {
            margin-left: 50px;
        }

        .not_read {
            border: 1px solid red;
        }

        .seen_block {
            bottom: 15px;
            position: absolute;
            right: 15px;
        }

        .panel-collapse.collapse.in {
            position: relative;
        }

        .disabling_block > img {
            left: 50%;
            position: absolute;
            top: 35%;
        }

        #top-link-block.affix-top {
            position: absolute; /* allows it to "slide" up into view */
            bottom: -82px;
            left: 10px;
        }
        #top-link-block.affix {
            position: fixed; /* keeps it on the bottom once in view */
            bottom: 30px;
            left: 30px;
        }

        .media-body {
            position: relative;
        }

        .typing {
            position: absolute;
            top: 0;
            left: 100px;
            color: #999;
        }
    </style>
{% endblock %}